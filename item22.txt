item22. 값에 의한 호출보다는 레퍼런스에 의한 호출을 선호한다.

C++는 값에 의한 전달이 기본으로 채택되어 있어, 함수인자들은 실인자의
복사본으로 초기화 되며, 이것은 아주 비싼 연산이 됨.

Student returnStudent(Student s) {return s;}
Student plato; //플라톤은 소크라테스 수하에서 수학
returnStudent(plato); //returnStudent 호출

1. plato를 위한 초기화 함수 호출
2. returnStudent에 넘겨줄때 복사 생성자 호출
3. s를 위한 소멸자 호출
4. returnStudent의 반환객체를 위한 소멸자 호출

※Student 객체 내부에 어떤 객체를 상속받고, 멤버변수를
포함하는지에 따라 추가적인 비용이 더 발생함.

※레퍼런스로 전달하는 것은 잘라지는 문제(slicing problem)을 피할수
있음. 유도클래스 객체가 선조클래스 객체로 변할때 유도 클래스 객체의
특징들이 잘라지며, 선조 클래스로 변환됨(가상함수 이용시 치명적)

레퍼런스에 의한 전달이 가지는 문제는 항목17의 알리아싱이
치명적. 가끔은 레퍼런스에 인자를 전달할수 없음(항목 23)

레퍼런스는 모든 경우 포인터들로서 구현되므로, 레퍼런스로 전달하는 것은
보통 포인터를 전달한다는 것을 의미. 만일 작은 객체를 전달한다면 값에
의한 전달이 효율적




