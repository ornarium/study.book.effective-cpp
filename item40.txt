item40. 레이어링을 통해 “가지고있는것”과 “사용하여구현된”것을
모델링하도록 한다.

레이어링(Layeing)은 다른 클래스 위에 하나의 클래스를 포함시켜 만드는
것.

레이어링은 has-a(가지고 있는) 나 is-implemented-in-terms-of(사용하여
구현된)의 의미를 가짐.

※ C++표준과 유사한 컨테이너 클래스를 써야하지만, (깐깐한 컨네이터
클래스의 요구사항때문에) 자신만의 컨테이너를 만들어야 될때.

//Set템플릿<class T>를 구현하기 위해 list를 바르게 사용한 경우
//isa가 아니라 “사용하여구현된”관계
template<class T>
class Set {
public:
  bool member (const T& 항목) const;

  void insert(const T& 항목);
  void remove(const T& 항목);

  int cardinality() const;
private:
  list<T> rep; //하나의 집합을 표현
};

※Set클래스 인터페이스는 완전과 최소 테스트에서 실패함(항목 18)
- 완전의 관점에서 집합의 내용을 반복하는 방식이나 제공되는 멤버 함수들이 생략
- Set클래스는 표준라이브러리의 컨테이너 클래스의 규약을 따르지
않음(항목 49)

