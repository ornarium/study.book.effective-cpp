item15. operator=이 *this에 대한 레퍼런스(reference)를
리턴(return)하도록 한다

w = x = y = z = "Hello";
//내부적으로 치환 연산은 오른쪽 연산 우선
w = (x = (y = (z = "Hello"))); 
w.operator= (x.operator= (y.operator= (z.operator= ("Hello"))));

새로 C++를 시작하는 프로그래머들의 실수 두가지
1. operator=의 리턴값을 void로 한다는 것. 연속적인 치환을 사용할 수
없다
2. operator=의 리턴값을 const객체로 되돌려 주는것
const Widget& operator= (const Widget& rhs);
기본적인 이유는 아래를 막기 위해서인데, 기본 클래스에서조차 되는 것을
굳이 막을 이유는 없다고(책에서는 설명하는데... 와닫지는 않는다)
Widget w1, w2, w3
(w1 = w2) = w3

리턴값으로 사용함에 있어서 두가지 후보가 있다.
String& String::operator=(const String& rhs) {return &this};
String& String::operator=(const String& rhs) {retrun rhs};

2번째는 절대 컴파일 되지 않는다.
1번째는 String에 대한 레퍼런스를 돌려주지만, 2번째는 const String&을
되돌려 주기 때문...

2번을 사용하게 된다면
x = "Hello";
가
//인자를 변경하는 함수에게 임시 객체를 전달하지 않게 하기 위해..
const String temp("Hello"); 
x = temp;


※결국, *this를 되돌려주도록 operator=를 선언하면 된다.
